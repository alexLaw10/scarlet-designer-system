module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
    jest: true
  },
  extends: [
    'eslint:recommended',
    '@typescript-eslint/recommended',
    '@stencil/eslint-config',
    'prettier'
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2021,
    sourceType: 'module',
    project: './tsconfig.json'
  },
  plugins: [
    '@typescript-eslint',
    '@stencil',
    'prettier'
  ],
  rules: {
    // TypeScript specific rules
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-unused-vars': [
      'error', 
      { 
        'argsIgnorePattern': '^_',
        'varsIgnorePattern': '^_',
        'caughtErrorsIgnorePattern': '^_'
      }
    ],
    '@typescript-eslint/no-non-null-assertion': 'warn',
    '@typescript-eslint/prefer-const': 'error',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/consistent-type-imports': [
      'error',
      { 'prefer': 'type-imports' }
    ],

    // General JavaScript rules
    'no-console': 'warn',
    'no-debugger': 'error',
    'no-alert': 'warn',
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-arrow-callback': 'error',
    'arrow-spacing': 'error',
    'no-duplicate-imports': 'error',
    'no-unused-expressions': 'error',
    'no-unreachable': 'error',
    'no-constant-condition': 'error',
    'no-empty': 'warn',
    'no-extra-semi': 'error',
    'no-irregular-whitespace': 'error',
    'no-multiple-empty-lines': ['error', { 'max': 1 }],
    'no-trailing-spaces': 'error',
    'eol-last': 'error',
    'comma-dangle': ['error', 'never'],
    'quotes': ['error', 'single', { 'avoidEscape': true }],
    'semi': ['error', 'always'],
    'indent': ['error', 2, { 'SwitchCase': 1 }],
    'object-curly-spacing': ['error', 'always'],
    'array-bracket-spacing': ['error', 'never'],
    'comma-spacing': ['error', { 'before': false, 'after': true }],
    'key-spacing': ['error', { 'beforeColon': false, 'afterColon': true }],
    'space-before-blocks': 'error',
    'space-before-function-paren': ['error', 'never'],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': ['error', 'always'],
    'brace-style': ['error', '1tbs', { 'allowSingleLine': true }],
    'camelcase': ['error', { 'properties': 'never' }],
    'new-cap': 'error',
    'new-parens': 'error',
    'no-array-constructor': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-unneeded-ternary': 'error',
    'one-var': ['error', 'never'],
    'operator-assignment': 'error',
    'operator-linebreak': ['error', 'after'],
    'padded-blocks': ['error', 'never'],
    'quote-props': ['error', 'as-needed'],
    'space-after-keywords': 'error',
    'space-return-throw-case': 'error',

    // Prettier integration
    'prettier/prettier': 'error',

    // Stencil specific rules
    '@stencil/async-methods': 'error',
    '@stencil/ban-prefix': ['error', ['stencil', 'stnl', 'st']],
    '@stencil/decorators-context': 'error',
    '@stencil/decorators-style': [
      'error',
      {
        'prop': 'inline',
        'state': 'inline',
        'element': 'inline',
        'event': 'inline',
        'method': 'multiline',
        'host': 'multiline',
        'listener': 'multiline'
      }
    ],
    '@stencil/element-type': 'error',
    '@stencil/host-data-missing': 'error',
    '@stencil/methods-must-be-public': 'error',
    '@stencil/no-conflict-vars': 'error',
    '@stencil/no-const-assertion': 'error',
    '@stencil/no-mutable': 'error',
    '@stencil/own-methods-must-be-private': 'error',
    '@stencil/own-props-must-be-public': 'error',
    '@stencil/prefer-vdom-listener': 'error',
    '@stencil/props-must-be-public': 'error',
    '@stencil/props-must-be-readonly': 'error',
    '@stencil/render-returns-host': 'error',
    '@stencil/required-jsdoc': 'error',
    '@stencil/reserved-member-names': 'error',
    '@stencil/single-export': 'error',
    '@stencil/strict-mutable': 'error'
  },
  overrides: [
    {
      files: ['**/*.test.ts', '**/*.spec.ts', '**/*.e2e.ts'],
      rules: {
        '@typescript-eslint/no-explicit-any': 'off',
        'no-console': 'off',
        'no-debugger': 'off',
        'no-alert': 'off',
        'prefer-const': 'off',
        'no-var': 'off',
        'camelcase': 'off',
        'new-cap': 'off',
        'no-new': 'off',
        'no-unused-expressions': 'off',
        'no-magic-numbers': 'off',
        'max-lines-per-function': 'off',
        'max-lines': 'off',
        'max-statements': 'off',
        'max-params': 'off',
        'max-depth': 'off',
        'complexity': 'off',
        'no-underscore-dangle': 'off',
        'no-param-reassign': 'off',
        'no-restricted-syntax': 'off',
        'no-await-in-loop': 'off',
        'no-loop-func': 'off',
        'no-return-await': 'off',
        'no-throw-literal': 'off',
        'no-useless-catch': 'off',
        'no-useless-return': 'off',
        'prefer-promise-reject-errors': 'off',
        'require-await': 'off',
        'no-async-promise-executor': 'off',
        'no-misleading-character-class': 'off',
        'no-prototype-builtins': 'off',
        'no-regex-spaces': 'off',
        'no-sparse-arrays': 'off',
        'no-template-curly-in-string': 'off',
        'no-unexpected-multiline': 'off',
        'no-unreachable-loop': 'off',
        'no-unsafe-finally': 'off',
        'no-unsafe-negation': 'off',
        'use-isnan': 'off',
        'valid-typeof': 'off',
        'no-case-declarations': 'off',
        'no-confusing-arrow': 'off',
        'no-duplicate-imports': 'off',
        'no-empty-pattern': 'off',
        'no-extra-boolean-cast': 'off',
        'no-extra-parens': 'off',
        'no-extra-semi': 'off',
        'no-func-assign': 'off',
        'no-global-assign': 'off',
        'no-import-assign': 'off',
        'no-inner-declarations': 'off',
        'no-invalid-regexp': 'off',
        'no-obj-calls': 'off',
        'no-redeclare': 'off',
        'no-self-assign': 'off',
        'no-undef': 'off',
        'no-unused-labels': 'off',
        'no-useless-catch': 'off',
        'no-useless-escape': 'off',
        'no-with': 'off',
        'valid-typeof': 'off'
      }
    },
    {
      files: ['**/*.stories.ts'],
      rules: {
        '@typescript-eslint/no-explicit-any': 'off',
        'no-console': 'off',
        'no-debugger': 'off',
        'no-alert': 'off',
        'prefer-const': 'off',
        'no-var': 'off',
        'camelcase': 'off',
        'new-cap': 'off',
        'no-new': 'off',
        'no-unused-expressions': 'off',
        'no-magic-numbers': 'off',
        'max-lines-per-function': 'off',
        'max-lines': 'off',
        'max-statements': 'off',
        'max-params': 'off',
        'max-depth': 'off',
        'complexity': 'off',
        'no-underscore-dangle': 'off',
        'no-param-reassign': 'off',
        'no-restricted-syntax': 'off',
        'no-await-in-loop': 'off',
        'no-loop-func': 'off',
        'no-return-await': 'off',
        'no-throw-literal': 'off',
        'no-useless-catch': 'off',
        'no-useless-return': 'off',
        'prefer-promise-reject-errors': 'off',
        'require-await': 'off',
        'no-async-promise-executor': 'off',
        'no-misleading-character-class': 'off',
        'no-prototype-builtins': 'off',
        'no-regex-spaces': 'off',
        'no-sparse-arrays': 'off',
        'no-template-curly-in-string': 'off',
        'no-unexpected-multiline': 'off',
        'no-unreachable-loop': 'off',
        'no-unsafe-finally': 'off',
        'no-unsafe-negation': 'off',
        'use-isnan': 'off',
        'valid-typeof': 'off',
        'no-case-declarations': 'off',
        'no-confusing-arrow': 'off',
        'no-duplicate-imports': 'off',
        'no-empty-pattern': 'off',
        'no-extra-boolean-cast': 'off',
        'no-extra-parens': 'off',
        'no-extra-semi': 'off',
        'no-func-assign': 'off',
        'no-global-assign': 'off',
        'no-import-assign': 'off',
        'no-inner-declarations': 'off',
        'no-invalid-regexp': 'off',
        'no-obj-calls': 'off',
        'no-redeclare': 'off',
        'no-self-assign': 'off',
        'no-undef': 'off',
        'no-unused-labels': 'off',
        'no-useless-catch': 'off',
        'no-useless-escape': 'off',
        'no-with': 'off',
        'valid-typeof': 'off'
      }
    },
    {
      files: ['**/*.config.js', '**/*.config.ts', '**/jest.config.js', '**/commitlint.config.js', '**/.lintstagedrc.js'],
      rules: {
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/no-require-imports': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        'no-console': 'off',
        'no-debugger': 'off',
        'no-alert': 'off',
        'prefer-const': 'off',
        'no-var': 'off',
        'camelcase': 'off',
        'new-cap': 'off',
        'no-new': 'off',
        'no-unused-expressions': 'off',
        'no-magic-numbers': 'off',
        'max-lines-per-function': 'off',
        'max-lines': 'off',
        'max-statements': 'off',
        'max-params': 'off',
        'max-depth': 'off',
        'complexity': 'off',
        'no-underscore-dangle': 'off',
        'no-param-reassign': 'off',
        'no-restricted-syntax': 'off',
        'no-await-in-loop': 'off',
        'no-loop-func': 'off',
        'no-return-await': 'off',
        'no-throw-literal': 'off',
        'no-useless-catch': 'off',
        'no-useless-return': 'off',
        'prefer-promise-reject-errors': 'off',
        'require-await': 'off',
        'no-async-promise-executor': 'off',
        'no-misleading-character-class': 'off',
        'no-prototype-builtins': 'off',
        'no-regex-spaces': 'off',
        'no-sparse-arrays': 'off',
        'no-template-curly-in-string': 'off',
        'no-unexpected-multiline': 'off',
        'no-unreachable-loop': 'off',
        'no-unsafe-finally': 'off',
        'no-unsafe-negation': 'off',
        'use-isnan': 'off',
        'valid-typeof': 'off',
        'no-case-declarations': 'off',
        'no-confusing-arrow': 'off',
        'no-duplicate-imports': 'off',
        'no-empty-pattern': 'off',
        'no-extra-boolean-cast': 'off',
        'no-extra-parens': 'off',
        'no-extra-semi': 'off',
        'no-func-assign': 'off',
        'no-global-assign': 'off',
        'no-import-assign': 'off',
        'no-inner-declarations': 'off',
        'no-invalid-regexp': 'off',
        'no-obj-calls': 'off',
        'no-redeclare': 'off',
        'no-self-assign': 'off',
        'no-undef': 'off',
        'no-unused-labels': 'off',
        'no-useless-catch': 'off',
        'no-useless-escape': 'off',
        'no-with': 'off',
        'valid-typeof': 'off'
      }
    }
  ],
  ignorePatterns: [
    'dist/',
    'node_modules/',
    'www/',
    'storybook-static/',
    'coverage/'
  ]
};
